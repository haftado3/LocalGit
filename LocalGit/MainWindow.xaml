<controls:MetroWindow x:Class="LocalGit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:LocalGit.ViewModel"
        xmlns:cv="clr-namespace:LocalGit.Converters"

        mc:Ignorable="d"
        d:DataContext="{Binding Source={StaticResource DesignVm}}"
        Title="MainWindow" x:Name="mainWindow" Height="600" Width="800">
    <Window.Resources>
        <vm:MainViewModel x:Key="DesignVm"/>

        <cv:IsSmallResolution x:Key="IsSmallResolution"/>
        <LinearGradientBrush x:Key="gradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#afffff" Offset="0.4"/>
            <GradientStop Color="#FF6EB5F5" Offset="1"/>
        </LinearGradientBrush>
        <!--left grids template for big resolution-->
        <DataTemplate x:Key="BigTemplate" >
            <!-- inside datatemplate datacontext is empty so you have to set it by element name or relative source, here i found parent of type metrowindow then i set its path to metrowindows datacontext -->
            <Grid Width="150" Background="{StaticResource gradientBrush}" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}},Path=DataContext}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!-- ItemsSource="{Binding ElementName=mainWindow,Path=DataContext.ContainerMenu}"  -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <TextBlock>Container</TextBlock>
                    </Grid>
                    <Separator Grid.Row="1" />
                    <ListBox ItemsSource="{Binding ContainerMenu}"  Grid.Row="2">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"></TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <TextBlock>Chat</TextBlock>
                    </Grid>
                    <Separator Grid.Row="1" />
                    <ListBox ItemsSource="{Binding ContainerMenu}"  Grid.Row="2">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"></TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>
        </DataTemplate>

        <!--left grids template for small resolution-->
        <DataTemplate x:Key="SmallTemplate">
            <Grid Width="50" Background="Silver">
                


            </Grid>
        </DataTemplate>
    </Window.Resources>
   
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Column="1" Grid.ColumnSpan="2" Background="Sienna"></Grid>
            <!--i'm using content control here to have two different views in one control, one for small width and one for big width , i can create different views in one page using content control just bind its ContentTemplate to your view , i think ContentPresenter can do this too-->
        <ContentControl Grid.Row="1" Grid.RowSpan="2">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <!--set contents template default value for bigtemplate-->
                    <Setter Property="ContentTemplate" Value="{StaticResource BigTemplate}"></Setter>
                    <Style.Triggers>
                        <!--check if width less than converter parameter then show small template-->
                        <DataTrigger Binding="{Binding ElementName=mainWindow,Path=Width,Converter={StaticResource IsSmallResolution},ConverterParameter=600}" Value="True">
                            <Setter Property="ContentTemplate" Value="{StaticResource SmallTemplate}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
        <ContentControl Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding SelectedInnerView}">
        </ContentControl>
        
    </Grid>
</controls:MetroWindow>

